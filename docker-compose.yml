version: '3'

services:
  admin-backend:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
      - /app/admin-backend/node_modules
    environment:
      - NODE_ENV=development
      - SERVICE_TYPE=admin
    networks:
      - app-network
    command: node admin-backend/server.js
    container_name: admin-backend
  
  user-backend-1:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
      - /app/user-backend/node_modules
    environment:
      - NODE_ENV=development
      - INSTANCE_ID=user-backend-1
      - SERVICE_TYPE=user
    networks:
      - app-network
    command: node user-backend/server.js
    container_name: user-backend-1
  
  user-backend-2:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
      - /app/user-backend/node_modules
    environment:
      - NODE_ENV=development
      - INSTANCE_ID=user-backend-2
      - SERVICE_TYPE=user
    networks:
      - app-network
    command: node user-backend/server.js
    container_name: user-backend-2
  
  user-backend-3:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
      - /app/user-backend/node_modules
    environment:
      - NODE_ENV=development
      - INSTANCE_ID=user-backend-3
      - SERVICE_TYPE=user
    networks:
      - app-network
    command: node user-backend/server.js
    container_name: user-backend-3
    
  nginx:
    image: nginx:latest
    ports:
      - "9090:9090"  # Admin backend
      - "4000:4000"  # User backend
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - admin-backend
      - user-backend-1
      - user-backend-2
      - user-backend-3
    networks:
      - app-network
    container_name: nginx-load-balancer

networks:
  app-network:
    driver: bridge